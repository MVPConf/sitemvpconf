name: Deploy to Azure Storage

on:
  push:
    branches:
      - hom
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: PRD
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          cat > .env << EOF
          # ========================================
          # 🌐 CONFIGURAÇÕES DE API E STORAGE
          # ========================================

          # Storage Account do Azure (usado para imagens, arquivos estáticos, etc.)
          STORAGE_ACCOUNT_URL=${{ secrets.STORAGE_ACCOUNT_URL }}

          # API do Power Automate para carregar palestras (Excel)
          TALKS_API_URL=${{ secrets.TALKS_API_URL }}

          # API do Power Automate para autenticação (envio de email)
          AUTH_API_URL=${{ secrets.AUTH_API_URL }}

          # ========================================
          # ⚙️ CONFIGURAÇÕES DA AGENDA
          # ========================================

          # Fonte de dados da agenda (true = JSON local, false = API Excel)
          USE_LOCAL_JSON=false

          # Timeout para chamadas de API (em milissegundos)
          API_TIMEOUT=12000
          EOF

      - name: Verify .env file (debug)
        run: |
          echo "Contents of .env file:"
          cat .env

      - name: Build project
        run: npm run build

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Clean Azure Storage Container
        uses: azure/CLI@v2
        with:
          inlineScript: |
            echo "🧹 Limpando container \$web..."
            az storage blob delete-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
              --auth-mode key \
              --source '$web' || echo "Container já estava vazio ou erro na limpeza (continuando...)"

      - name: Upload Main Site to Azure Storage
        uses: azure/CLI@v2
        with:
          inlineScript: |
            echo "📤 Fazendo upload dos novos arquivos..."
            az storage blob upload-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
              --auth-mode key \
              --destination '$web' \
              --source ./dist \
              --overwrite \
              --pattern '*'

      # - name: Upload Agenda App to Azure Storage
      #   uses: azure/CLI@v2
      #   with:
      #     inlineScript: |
      #       az storage blob upload-batch \
      #         --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
      #         --auth-mode key \
      #         --destination '$web/agenda' \
      #         --source ./public/agenda \
      #         --overwrite \
      #         --pattern '*'

      # - name: Purge Azure CDN (optional)
      #   uses: azure/CLI@v2
      #   with:
      #     inlineScript: |
      #       if [ ! -z "${{ secrets.AZURE_CDN_PROFILE_NAME }}" ]; then
      #         az cdn endpoint purge \
      #           --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
      #           --profile-name ${{ secrets.AZURE_CDN_PROFILE_NAME }} \
      #           --name ${{ secrets.AZURE_CDN_ENDPOINT_NAME }} \
      #           --content-paths '/*'
      #       fi
      #   continue-on-error: true

      - name: Logout from Azure
        run: |
          az logout
        if: always()
